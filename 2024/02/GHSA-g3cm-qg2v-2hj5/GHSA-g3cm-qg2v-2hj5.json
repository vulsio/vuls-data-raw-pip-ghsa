{
	"schema_version": "1.4.0",
	"id": "GHSA-g3cm-qg2v-2hj5",
	"modified": "2024-02-05T23:23:22Z",
	"published": "2024-02-05T23:23:22Z",
	"summary": "pyLoad open redirect vulnerability due to improper validation of the is_safe_url function",
	"details": "### Summary\nOpen redirect vulnerability due to incorrect validation of input values when redirecting users after login.\n\n### Details\npyload is validating URLs via the `get_redirect_url` function when redirecting users at login.\n![pyload is validating URLs via the get_redirect_url function when redirecting users at login](https://user-images.githubusercontent.com/114328108/301713779-598e6152-3b43-4801-8052-b2141ec17a03.png)\n\n\nThe URL entered in the `next` variable goes through the `is_safe_url` function, where a lack of validation can redirect the user to an arbitrary domain.\n![The URL entered in the next variable goes through the is_safe_url function, where a lack of validation can redirect the user to an arbitrary domain](https://user-images.githubusercontent.com/114328108/301713793-abeb74b2-7412-4a97-8207-77d7b6d99daf.png)\n\n\nThe documentation in the urllib library shows that improper URLs are recognized as relative paths when using the `urlparse` function. (https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse)\n\nFor example, When an unusual URL like `https:///example.com` is entered, `urlparse` interprets it as a relative path, but in the actual request it is converted to `https://example.com` due to url normalization.\n\n### PoC\n1. In the next variable, insert the URL to which you want to redirect the user.\n![1  In the next variable, insert the URL to which you want to redirect the user](https://user-images.githubusercontent.com/114328108/301716236-f7684ce1-544d-41ce-91cd-b364a6a26b28.png)\n\n\n2. Check that it is possible to bypass url validation and redirect users to an arbitrary url.\n![2  Check that it is possible to bypass url validation and redirect users to an arbitrary url](https://user-images.githubusercontent.com/114328108/301714265-9cea0f43-97de-47db-9da4-a71d46bf7160.png)\n![3](https://user-images.githubusercontent.com/114328108/301716242-7de93f28-002c-4e5d-8ad7-0e29593b319b.png)\n\n\n\n### Impact\nAn attacker can use this vulnerability to redirect users to malicious websites, which can be used for phishing and similar attacks.\n",
	"severity": [
		{
			"type": "CVSS_V3",
			"score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:N/A:N"
		}
	],
	"affected": [
		{
			"package": {
				"ecosystem": "PyPI",
				"name": "pyload-ng"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "0.5.0b3.dev79"
						}
					]
				}
			]
		}
	],
	"references": [
		{
			"type": "WEB",
			"url": "https://github.com/pyload/pyload/security/advisories/GHSA-g3cm-qg2v-2hj5"
		},
		{
			"type": "WEB",
			"url": "https://github.com/pyload/pyload/commit/fe94451dcc2be90b3889e2fd9d07b483c8a6dccd"
		},
		{
			"type": "PACKAGE",
			"url": "https://github.com/pyload/pyload"
		}
	],
	"database_specific": {
		"cwe_ids": [
			"CWE-601"
		],
		"github_reviewed": true,
		"github_reviewed_at": "2024-02-05T23:23:22Z",
		"nvd_published_at": null,
		"severity": "MODERATE"
	}
}
